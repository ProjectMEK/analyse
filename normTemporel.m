function normTemporel(varargin)
% Marseille
% Mars 2001
%
% DialogBox pour demander les infos relatives à la normalisation en Temps
% 
  if nargin == 0
    commande ='ouverture';
  else
    commande =varargin{1};
    wn =guidata(gcf);
  end
  OA =CAnalyse.getInstance();
  Ofich =OA.findcurfich();
  hdchnl =Ofich.Hdchnl;
  vg =Ofich.Vg;
  %
  switch(commande)
  %---------------
  case 'ouverture'
  	Ofich.lesess();
  	Ofich.lescats();
    if vg.nad > 2;letop =vg.nad;else letop =vg.nad+1;end
    Flarg =300; Fhaut =580;
    lapos =positionfen('G','H',Flarg,Fhaut);
    wn.fig(1) = figure('Name','MENU NORMALISATION EN TEMPS', 'Position',lapos, ...
            'CloseRequestFcn','normTemporel(''fermer'')',...
            'DefaultUIControlBackgroundColor',[0.8 0.8 0.8],...
            'DefaultUIControlunits','pixels',...
            'DefaultUIPanelBackgroundColor',[0.8 0.8 0.8],...
            'DefaultUIPanelunits','pixels',...
            'DefaultUIControlFontSize',8, 'Resize', 'off');								
    wn.titre(1) = uicontrol('Parent',wn.fig(1), 'FontWeight','bold',...
            'Position',[25 545 250 25], ...
            'String','Choix des canaux à normaliser', ...
            'Style','text');
    wn.control(1) = uicontrol('Parent',wn.fig(1), ...
            'BackgroundColor',[1 1 1], ...
            'Position',[50 450 200 100], ...
            'String',hdchnl.Listadname, ...
            'Min',1,...
            'Max',letop,...
            'Style','listbox', ...
            'Value',1);
    allcanaux = get(wn.control(1),'Value');
    points = '...';
    wn.titre(2) = uicontrol('Parent',wn.fig(1), ...
            'FontWeight','bold',...
            'Position',[25 400 250 35], ...
            'String','Canal contenant les Points Marqués qui définissent le début et la fin des courbes', ...
            'Style','text');
    wn.control(2) = uicontrol('Parent',wn.fig(1), ...
            'BackgroundColor',[1 1 1], ...
            'Position',[50 295 200 100], ...
            'String',['...|' hdchnl.Listadname], ...			
            'Callback','normTemporel(''choixPM'')',...
            'Min',1,...
            'Style','listbox', ...
            'Value',1);
    wn.titre(3) =  uicontrol('Parent',wn.fig(1), ...
            'FontWeight','bold',...
            'Position',[80 250 60 20], ...
            'String','Début', ...
            'Style','text');
    wn.titre(4) =  uicontrol('Parent',wn.fig(1), ...
            'FontWeight','bold',...
            'Position',[160 250 60 20], ...
            'String','Fin', ...
            'Style','text');
    wn.titre(5) =  uicontrol('Parent',wn.fig(1), ...
            'FontWeight','bold',...
            'Position',[30 215 30 25], ...
            'String','Point N° :', ...
            'Style','text');
    wn.control(4) = uicontrol('Parent',wn.fig(1), ...
            'BackgroundColor',[1 1 1], ...
            'Position',[80 215 65 35], ...
            'String','...', ...
            'Min',1,...
            'Style','listbox', ...
            'Value',1);
    wn.control(5) = uicontrol('Parent',wn.fig(1), ...
            'BackgroundColor',[1 1 1], ...
            'Position',[160 215 65 35], ...
            'String','...', ...
            'Min',1,...
            'Style','listbox', ...
            'Value',1);
    wn.text(1) = uicontrol('Parent',wn.fig(1), ...
            'Position',[50 155 135 25], ...
            'FontWeight','bold',...
            'Style','text',...
            'String','Nombre de points des courbes normalisées');
    wn.ed(1) = uicontrol('Parent',wn.fig(1), ...
            'BackgroundColor',[1 1 1], ...
            'Position',[200 155 35 20], ...
            'Style','edit', ...
            'String','100');
    larg =100; posx =round((Flarg-larg)/2);
    wn.control(7) = uicontrol('Parent',wn.fig(1), ...
            'Callback','normTemporel(''travail'')', ...
            'Position',[posx 95 larg 25], ...
            'String','Au travail');
    posx =3; larg =Flarg-(2*posx);
    bidd =uipanel('Parent',wn.fig(1), 'visible','on', 'Position',[posx 5 larg 60], ...
                  'bordertype','beveledin');
    posx =10; larg =larg-(2*posx);
    uicontrol('Parent',bidd, 'FontSize',10, 'Position',[posx 10 larg 40], 'Style','text',...
            'String','Normalisation en temps des portions de courbes qui ont des durées différentes');
    set(wn.fig(1),'WindowStyle','modal');
    guidata(gcf,wn);
    %-------------
    case 'travail'
      Vcan =get(wn.control(1),'Value');      % canaux à normaliser
      nombre =length(Vcan);
      pmdep =get(wn.control(4),'Value');  % 1st PM number
      pmfin =get(wn.control(5),'Value');	 % last PM number
      canalref =get(wn.control(2),'Value')-1;
      if pmdep == pmfin
        disp('points identiques...');
        return;
      elseif pmdep ~= 1 & pmfin ~= 1
        ttest =Ofich.assezpt(canalref,[pmdep-1 pmfin-1]);
        if ttest
          return;
        end
      end
      echantd =[];
      echantf =[];
      h1 =waitbar(0,'traitement en cours');
      ptchnl =Ofich.Ptchnl;
      if pmdep == 1 | min(hdchnl.npoints(canalref,1:vg.ess)) < (pmdep-1) | pmfin == 1
        lapos =positionfen('C','C',225,225);
        wn.fig(2) =figure('Units', 'pixels', ...
            'Color',[0.8 0.8 0.8], ...
            'Name', 'AFFICHAGE D`ERREUR', ...
            'MenuBar','none', ...
            'NumberTitle','off', ...
            'Position',lapos, ...
            'Resize', 'off');
        wn.titre(1) =uicontrol('Parent',wn.fig(2), ...
            'Units','pixels', ...
            'BackgroundColor',[0.8 0.8 0.8], ...
            'ListboxTop',0, ...
            'FontSize',12,...
            'Position',[25 100 175 70], ...
            'String','Il faut marquer le même nombre de points pour chaque essai', ...
            'Style','text');
        delete(wn.fig(1));
        close (h1);  
        error('Il faut le même nombre de points marqués pour chaque essai, ou choisir un N° de point qui existe, ou ne pas sélectionner "..." !!!');
      else
        for k =1:vg.ess  %determine the index of first and last point for normalisation
          echantd(k) =ptchnl.Dato((pmdep-1),hdchnl.point(canalref,k),1) ;     
          echantf(k) =ptchnl.Dato((pmfin-1),hdchnl.point(canalref,k),1);
          nbdon(k) =abs(echantf(k) - echantd(k)) + 1;
        end  
      end
      snumnor =get(wn.ed(1),'String');  % valeur nombre de points
      numnor =str2num(snumnor);         % valeur  en chiffre
      %------------------------
      % Ajout des canaux utiles
      hdchnl.duplic(Vcan);
      Ncan =vg.nad+1:vg.nad+nombre;
      hdchnl.nsmpls(Ncan,:) =numnor;    %record the number of data points for new chanels
      Vdt =CDtchnl();
      dtchnl =CDtchnl();
    	dtchnl.Dato.N =zeros(numnor,vg.ess);
      for col =1:nombre
      	Ofich.getcanal(Vdt, Vcan(col));
      	N =Vdt.Nom;
      	dtchnl.Dato.N =zeros(numnor,vg.ess);
        hdchnl.adname{Ncan(col)} =['NT.' deblank(hdchnl.adname{Vcan(col)})];
        for j =1:vg.ess
          waitbar(j/vg.ess,h1,['traitement essai: ' num2str(j) ' en cours']);
          dt =1/hdchnl.rate(Vcan(col),j);
          nb =(nbdon(j)-1)*dt;
          nbnt =nb/numnor;
          if echantd(j) < echantf(j) %allows inversion of order of PMs
        	  dtchnl.Dato.N(1:numnor,j) =interp1([0:dt:nb],Vdt.Dato.(N)([echantd(j):echantf(j)],j),[0:nbnt:nb-nbnt],'spline');
          else
            dtchnl.Dato.N(1:numnor,j) =interp1([0:dt:nb],Vdt.Dato.(N)([echantf(j):echantd(j)],j),[0:nbnt:nb-nbnt],'spline');
          end
          vc =[hdchnl.comment{Vcan(col), j} ' Norm.Tmp, Nb.Points ' num2str(numnor) '//'];
          hdchnl.comment{Ncan(col), j} =vc;
          hdchnl.max(Ncan(col), j) =max(dtchnl.Dato.N(1:numnor,j));
          hdchnl.min(Ncan(col), j) =min(dtchnl.Dato.N(1:numnor,j));
        end
        Ofich.setcanal(dtchnl, Ncan(col));
        dtchnl.MaZdato();
      end
      close(h1)
      vg.nad =vg.nad+nombre;
      delete(wn.fig(1));
      delete(dtchnl);
      delete(Vdt);
      vg.sauve =1;
      gaglobal('editnom');
    %-------------
    case 'choixPM'
    refcanal =get(wn.control(2),'Value')-1 ;  %ref canal
    if refcanal > 0  %ie not chosen the '...' option
      nptmx =hdchnl.npoints(refcanal,1);
      points ='...';
      for numk =1:nptmx
        points =[points, '|','No.', num2str(numk)];
      end
      set(wn.control(4),'String',points);
      set(wn.control(5),'String',points);
    else
      points ='...';
      set(wn.control(4),'Value',1);
      set(wn.control(4),'String',points);
      set(wn.control(5),'Value',1);
      set(wn.control(5),'String',points);
    end   
  %-------------
  case 'fermer'
    delete(wn.fig(1));
  end
end
